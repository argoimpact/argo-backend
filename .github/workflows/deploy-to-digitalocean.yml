name: Deploy to DigitalOcean Droplet

on:
  workflow_run:
    workflows: ["Build and Publish Docker Images"]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}
  APP_DIR: /var/lib/argo-docker-compose

jobs:
  deploy:
    environment: beta
    runs-on: ubuntu-latest

    steps:
      - name: Check outcome of triggered workflow
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo "The triggering workflow failed. Deployment will not proceed."
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER}}
          key: ${{ secrets.DROPLET_SSH_KEY}}
          # password: ${{ secrets.PASSWORD }}
          # port: ${{ secrets.PORT }}
          source: "docker-compose.yml"
          target: ${{ env.APP_DIR }}

      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            set -e # Exit if something returns a non-zero status
            cd ${{ env.APP_DIR }}
            docker login ghcr.io -u ${{ github.actor }} --password-stdin <<< ${{ secrets.GITHUB_TOKEN }}

            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:${{ env.IMAGE_TAG }} # Pull the latest version of your app service image

            docker compose down # Take down the current containers
            docker compose up -d # Start the containers in detached mode

            echo "Application and Redis services are up and running!"
